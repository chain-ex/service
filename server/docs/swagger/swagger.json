{
  "openapi": "3.0.1",
  "info": {
    "description": "tubu.io API Documentation - ",
    "version": "0.2.0",
    "title": "TUBU.IO API",
    "contact": {
      "email": "dev@tubu.io"
    }
  },
  "tags": [
    {
      "name": "API",
      "description": "API System"
    },
    {
      "name": "Network",
      "description": "Network Management System"
    },
    {
      "name": "Application",
      "description": "Application Management System"
    },
    {
      "name": "Sharing Application",
      "description": "Application Management System"
    },
    {
      "name": "API Key",
      "description": "API Key Management for Application"
    },
    {
      "name": "Contract",
      "description": "Contract Management System"
    },
    {
      "name": "Market",
      "description": "Market Management System"
    },
    {
      "name": "Webhook",
      "description": "Contract Event Webhook System"
    },
    {
      "name": "Integration Request",
      "description": "Request Information about Integration with Deployed Contract"
    },
    {
      "name": "User",
      "description": "User Management System"
    }
  ],
  "paths": {
    "/version": {
      "get": {
        "tags": ["API"],
        "summary": "Get current API version",
        "description": "",
        "operationId": "getAPIVersion",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "env": { "type": "string" },
                            "version": { "type": "string" }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/network": {
      "get": {
        "tags": ["Network"],
        "summary": "Get current user's active networks",
        "description": "",
        "operationId": "getNetworks",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "consensus": {
                          "type": "string"
                        },
                        "bctype": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer"
                        },
                        "totalPage": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/{networkID}": {
      "get": {
        "tags": ["Network"],
        "summary": "Get detail information of specific network",
        "description": "",
        "operationId": "getNetwork",
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "allOf": [
                        { "$ref": "#/components/schemas/BasicNetwork" },
                        {
                          "type": "object",
                          "properties": {
                            "chain": {
                              "type": "object",
                              "properties": {
                                "blockCount": { "type": "number" },
                                "nodeInfo": { "type": "string" },
                                "chainId": { "type": "number" }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "put": {
        "tags": ["Network"],
        "summary": "Update basic network information",
        "description": "",
        "operationId": "updateNetwork",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Network ID",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Basic Network Information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BasicNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "405": {
            "description": "Invalid parameters"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/{networkID}/apps": {
      "post": {
        "tags": ["Application"],
        "summary": "Create a new app on active networks",
        "description": "",
        "operationId": "postApps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicApplication"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "created_at": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["Application"],
        "summary": "Get current user's apps on specific network",
        "description": "",
        "operationId": "getApps",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          },
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "sharedWith": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email": { "type": "string" },
                                "username": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/{networkID}/apps/{id}": {
      "get": {
        "tags": ["Application"],
        "summary": "Get current users app with given id on spesific network",
        "description": "",
        "operationId": "getApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "sharedWith": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email": { "type": "string" },
                                "username": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "put": {
        "tags": ["Application"],
        "summary": "Update app information",
        "description": "",
        "operationId": "updateApp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "delete": {
        "tags": ["Application"],
        "summary": "Delete current users app with given id on spesific network",
        "description": "",
        "operationId": "deleteApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/sharing": {
      "get": {
        "tags": ["Sharing Application"],
        "summary": "Share an application with other user",
        "description": "",
        "operationId": "getShareApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          },
          {
            "name": "networkID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "sharedWith": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email": { "type": "string" },
                                "username": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "post": {
        "tags": ["Sharing Application"],
        "summary": "Share an application with other user",
        "description": "",
        "operationId": "shareApp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application_id": { "type": "integer" },
                  "email": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "delete": {
        "tags": ["Sharing Application"],
        "summary": "Revoke sharing with already shared user",
        "description": "",
        "operationId": "revokeSharedApp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application_id": { "type": "integer" },
                  "email": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/sharing/search": {
      "get": {
        "tags": ["Sharing Application"],
        "summary": "Get the possible users to share",
        "description": "",
        "operationId": "getUserToShare",
        "parameters": [
          {
            "name": "username",
            "in": "query"
          },
          {
            "name": "email",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "email": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/apikey": {
      "post": {
        "tags": ["API Key"],
        "summary": "Create an api key for the given application",
        "operationId": "generateAPIKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application_id": {
                    "type": "integer",
                    "description": "Application ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully renewed apiKey",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "token": {
                      "type": "string"
                    },
                    "application_id": {
                      "type": "integer"
                    },
                    "created_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "delete": {
        "tags": ["API Key"],
        "summary": "Delete an api key from an application",
        "operationId": "deleteAPIKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application_id": { "type": "integer" },
                  "api_key": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully renewed apiKey",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["API Key"],
        "summary": "Get APIKey of an application",
        "description": "",
        "operationId": "getAPIKeyOfApp",
        "parameters": [
          {
            "in": "query",
            "name": "appID",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "id": {
                          "type": "integer"
                        },
                        "token": {
                          "type": "string",
                          "description": "The API Key"
                        },
                        "application_id": {
                          "type": "integer",
                          "description": "Application ID"
                        },
                        "created_by": {
                          "description": "User ID of the creator of the API Key",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/{networkID}/contract": {
      "post": {
        "tags": ["Contract"],
        "summary": "Deploy new contract",
        "description": "",
        "operationId": "deployContract",
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BasicContract"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully deployed contract",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "contract_address": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "abi": {
                      "type": "string"
                    },
                    "owner_address": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "tag": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["Contract"],
        "summary": "Get current user's all contracts",
        "description": "",
        "operationId": "getContracts",
        "parameters": [
          {
            "$ref": "#/components/parameters/networkID"
          },
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          },
          {
            "in": "query",
            "name": "appID",
            "description": "Application ID",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "contract_address": {
                          "type": "string"
                        },
                        "short_id": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "abi": {
                          "type": "string"
                        },
                        "owner_address": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "tag": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer"
                        },
                        "totalPage": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/{networkID}/contract/{shortID}": {
      "get": {
        "tags": ["Contract"],
        "summary": "Get current user's contract's latest version",
        "description": "",
        "operationId": "getContractLatestVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          },
          {
            "$ref": "#/components/parameters/networkID"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "Get Tagged Contract Version (Optional) (Default Latest Version)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "contract_address": {
                              "type": "string"
                            },
                            "tag": {
                              "type": "string"
                            },
                            "abi": {
                              "type": "object"
                            }
                          }
                        },
                        "versionList": {
                          "id": { "type": "integer" },
                          "description": { "type": "string" },
                          "tag": { "type": "string" }
                        },
                        "contract": {
                          "application_id": { "type": "integer" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "short_id": { "type": "string" }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "delete": {
        "tags": ["Contract"],
        "summary": "Delete the contract with given shortID",
        "description": "",
        "operationId": "deleteContract",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          },
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "short_id": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "put": {
        "tags": ["Contract"],
        "summary": "Update the name and description of the contract's latest version",
        "description": "",
        "operationId": "updateContractLatestVersionInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          },
          {
            "$ref": "#/components/parameters/networkID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New Best Contract"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is the most important updated contract description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/market/": {
      "get": {
        "tags": ["Market"],
        "summary": "Get the public contracts and the user's own contracts from marketplace",
        "description": "",
        "operationId": "getMarketContracts",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ListMarketContract"
                        }
                      }
                    },
                    { "$ref": "#/components/schemas/MetaData" }
                  ]
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "post": {
        "tags": ["Market"],
        "summary": "Deploy a contract to the marketplace",
        "description": "",
        "operationId": "deployToMarketplace",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/DeployMarketContract" },
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "file"
                        }
                      },
                      "args": {
                        "type": "string|array",
                        "description": "Stringify Array object or Array"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully deployed contract",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "abi": {
                      "type": "string"
                    },
                    "bytecode": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "market_version": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/market/{id}": {
      "post": {
        "tags": ["Market"],
        "summary": "Deploy contracts from marketplace",
        "description": "",
        "operationId": "deployMarketContract",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "network_id": { "type": "integer", "required": true },
                  "application_id": { "type": "integer", "required": true },
                  "name": { "type": "string", "required": true },
                  "description": { "type": "string", "required": true },
                  "tag": { "type": "string", "required": true },
                  "args": { "type": "string|array", "required": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "abi": {
                      "type": "string"
                    },
                    "bytecode": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "market_version": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["Market"],
        "summary": "Get the public contracts and the user's own contracts from marketplace",
        "description": "",
        "operationId": "getMarketContract",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer"
                        },
                        "totalPage": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/transactions/": {
      "get": {
        "tags": ["Network", "Transaction"],
        "summary": "Get the network or contract transactions with the given networkID/shortID",
        "description": "",
        "operationId": "getTransactions",
        "parameters": [
          {
            "in": "query",
            "name": "networkID",
            "description": "Network ID",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "appID",
            "description": "Network ID",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "shortID",
            "description": "Short ID for contract",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "short_id": { "type": "string" },
                          "hash": { "type": "string" },
                          "from_address": { "type": "string" },
                          "status": { "type": "string" }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/transactions/{hash}": {
      "get": {
        "tags": ["Network", "Transaction"],
        "summary": "Get the transaction with the given transaction hash",
        "description": "",
        "operationId": "getTransactionsFromHash",
        "parameters": [
          {
            "in": "path",
            "name": "hash",
            "description": "Transaction Hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "short_id": {
                          "type": "string"
                        },
                        "from_address": {
                          "type": "string"
                        },
                        "hash": {
                          "type": "string"
                        },
                        "block_hash": {
                          "type": "string"
                        },
                        "input": {
                          "type": "object"
                        },
                        "status": {
                          "type": "string"
                        },
                        "block_number": {
                          "type": "string"
                        },
                        "extra_data": {
                          "type": "object"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/integration/stats": {
      "get": {
        "tags": ["Integration Request"],
        "summary": "Get the request counts",
        "description": "",
        "operationId": "getIntegrationStats",
        "parameters": [
          {
            "in": "query",
            "name": "applicationID",
            "description": "Application ID",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "shortID",
            "description": "Short ID of contract",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "todayTotal": { "type": "number", "example": 10 },
                        "weekTotal": { "type": "number", "example": 32 },
                        "monthTotal": { "type": "number", "example": 53 },
                        "quarterTotal": { "type": "number", "example": 97 },
                        "yearTotal": { "type": "number", "example": 129 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/integration/requests": {
      "get": {
        "tags": ["Integration Request"],
        "summary": "Get the request information about contract integrations",
        "description": "",
        "operationId": "getIntegrationRequests",
        "parameters": [
          {
            "in": "query",
            "name": "networkID",
            "description": "Network ID",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "applicationID",
            "description": "Application ID",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "shortID",
            "description": "Short ID of contract",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "short_id": {
                            "type": "string"
                          },
                          "method": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/integration/requests/{id}": {
      "get": {
        "tags": ["Integration Request"],
        "summary": "Get the request information about contract integrations",
        "description": "",
        "operationId": "getIntegrationRequest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Request ID",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "short_id": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "boolean"
                        },
                        "inputs": {
                          "type": "array",
                          "items": {}
                        },
                        "outputs": {
                          "type": "array",
                          "items": {}
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/contract/{shortID}/account": {
      "post": {
        "tags": ["Contract Account"],
        "summary": "Create a new contract account",
        "operationId": "createContractAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicContractAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "contract_address": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "abi": {
                      "type": "string"
                    },
                    "owner_address": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "tag": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["Contract Account"],
        "summary": "Get contract's accounts",
        "description": "",
        "operationId": "getContractAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          },
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "address": {
                      "type": "string"
                    },
                    "is_active": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/network/contract/{shortID}/account/{id}": {
      "get": {
        "tags": ["Contract Account"],
        "summary": "Get Contract Account Detail",
        "description": "",
        "operationId": "getContractAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/shortID"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "address": {
                      "type": "string"
                    },
                    "is_active": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "private_key": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/webhook": {
      "post": {
        "tags": ["Webhook"],
        "summary": "Create a new webhook for events",
        "operationId": "createWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicWebhook"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully renewed apiKey",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "contract_address": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "abi": {
                      "type": "string"
                    },
                    "owner_address": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "tag": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "get": {
        "tags": ["Webhook"],
        "summary": "Get contract's webhooks",
        "description": "",
        "operationId": "getContractWebhooks",
        "parameters": [
          {
            "in": "query",
            "name": "shortID",
            "description": "Contract ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Webhook Name",
                          "example": "All events"
                        },
                        "description": {
                          "type": "string"
                        },
                        "url": {
                          "description": "Webhook URL",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Contract Short ID",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/webhook/{id}": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Get contract's webhooks",
        "description": "",
        "operationId": "getSpecWebhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Webhook Name",
                          "example": "All events"
                        },
                        "description": {
                          "type": "string"
                        },
                        "url": {
                          "description": "Webhook URL",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Contract Short ID",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/webhook/{id}/log": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Get webhook logs",
        "description": "",
        "operationId": "getWebhookLogs",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "url": {
                          "description": "Webhook URL",
                          "type": "string"
                        },
                        "status": {
                          "description": "Webhook Request Status",
                          "type": "integer"
                        },
                        "request_at": {
                          "description": "Webhook Request Date",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/webhook/{id}/log/{logID}": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Get webhook log detail",
        "description": "",
        "operationId": "getWebhookLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "logID",
            "description": "Webhook Log ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "url": {
                          "description": "Webhook URL",
                          "type": "string"
                        },
                        "authorization": {
                          "description": "Key-Value for authorization",
                          "type": "object"
                        },
                        "request": {
                          "description": "Request Body",
                          "type": "object"
                        },
                        "response": {
                          "description": "Response",
                          "type": "object"
                        },
                        "response_headers": {
                          "description": "Response Headers Key-Value",
                          "type": "object"
                        },
                        "webhook_id": {
                          "description": "Webhook ID",
                          "type": "integer"
                        },
                        "short_id": {
                          "description": "Contract Short ID",
                          "type": "string"
                        },
                        "status": {
                          "description": "Webhook Request Status",
                          "type": "integer"
                        },
                        "response_at": {
                          "description": "Webhook Response Date",
                          "type": "string"
                        },
                        "request_at": {
                          "description": "Webhook Request Date",
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer"
                        },
                        "totalPage": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "error": "object",
            "message": "string"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "List users",
        "description": "Listing active users",
        "operationId": "getUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageFilter"
          },
          {
            "$ref": "#/components/parameters/pageSizeFilter"
          },
          {
            "$ref": "#/components/parameters/lastLimitFilter"
          },
          {
            "$ref": "#/components/parameters/orderByFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "post": {
        "tags": ["User"],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success Creation"
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/user/{username}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "put": {
        "tags": ["User"],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/api/user/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user data",
        "description": "",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request with error message",
            "content": {
              "application/json": {
                "schema": {
                  "error": "object",
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    }
  },
  "security": [
    {
      "UserToken": []
    }
  ],
  "components": {
    "securitySchemes": {
      "UserToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "Pagination": {
        "type": "object",
        "properties": {
          "page": { "type": "integer" },
          "pageCount": { "type": "integer" },
          "pageSize": { "type": "integer" },
          "rowCount": { "type": "integer" }
        },
        "xml": {
          "name": "MetaData"
        }
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "meta": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer",
                "description": "Total item count with current filters"
              },
              "totalPage": { "type": "integer" },
              "page": { "type": "integer", "description": "active page" }
            }
          }
        },
        "xml": {
          "name": "MetaData"
        }
      },

      "BasicContractAccount": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Account Special Name",
            "example": "Main"
          }
        },
        "xml": {
          "name": "BasicContractAccount"
        }
      },
      "ListContractAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicContractAccount"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "address": {
                "type": "string",
                "description": "Account Ethereum Address"
              },
              "is_active": {
                "type": "string",
                "description": "Account status"
              },
              "created_at": {
                "type": "string"
              }
            }
          }
        ]
      },

      "ContractAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListContractAccount"
          },
          {
            "type": "object",
            "properties": {
              "private_key": {
                "type": "string",
                "description": "Encrypted PrivateKey"
              },
              "short_id": {
                "type": "string",
                "description": "Contract Short ID"
              },
              "updated_at": {
                "type": "string"
              }
            }
          }
        ]
      },

      "BasicWebhook": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Webhook Name",
            "example": "All events"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "description": "Webhook URL",
            "type": "string"
          },
          "authorization": {
            "description": "Key-Value for authorization",
            "type": "object"
          },
          "short_id": {
            "description": "Contract Short ID",
            "type": "string"
          }
        },
        "xml": {
          "name": "BasicWebhook"
        }
      },
      "Webhook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicWebhook"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BasicIntegrationRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Application Name",
            "example": 1
          },
          "short_id": {
            "type": "string",
            "description": "Contract Short ID",
            "example": 1
          },
          "method": {
            "type": "string",
            "description": "Called contract method",
            "example": "getTotal"
          },
          "type": {
            "type": "string",
            "description": "Called method type, send or call",
            "example": "call"
          },
          "status": {
            "type": "boolean",
            "description": "Request status, valid or not",
            "example": true
          }
        },
        "xml": {
          "name": "BasicApplication"
        }
      },
      "IntegrationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicIntegrationRequest"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "type": "integer",
                "format": "int64"
              },
              "inputs": {
                "type": "array",
                "description": "Parameters of called method",
                "items": {
                  "type": "object"
                }
              },
              "outputs": {
                "type": "array",
                "description": "Outputs of called method(call type)",
                "items": {
                  "type": "object"
                }
              },
              "events": {
                "type": "object",
                "description": "Events informations"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BasicApplication": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Application Name",
            "example": "sample contract"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "BasicApplication"
        }
      },
      "Application": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicApplication"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BasicContract": {
        "type": "object",
        "required": ["name", "application_id"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contract Name",
            "example": "sample contract"
          },
          "application_id": {
            "type": "integer",
            "description": "Contract Application",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "The contract is to avoid bad things"
          },
          "tag": {
            "type": "string",
            "description": "The tag for the first deployment of the contract",
            "default": "v1.0"
          },
          "short_id": {
            "type": "string",
            "description": "The shortID of the contract (to deploy a new version)(optional)"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "file"
            }
          },
          "args": {
            "type": "string"
          }
        },
        "xml": {
          "name": "BasicContract"
        }
      },
      "BasicContractShortID": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contract Name",
            "example": "sample contract"
          },
          "description": {
            "type": "string",
            "example": "The contract is to avoid bad things"
          },
          "tag": {
            "type": "string",
            "description": "The tag for the first deployment of the contract",
            "default": "v1.0"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "file"
            }
          },
          "args": {
            "type": "string|array",
            "description": "Stringify Array object or Array"
          }
        },
        "xml": {
          "name": "BasicContractShortID"
        }
      },
      "ListContract": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contract ID"
          },
          "name": {
            "type": "string",
            "description": "Contract Name"
          },
          "description": {
            "type": "string"
          },
          "contract_address": {
            "type": "string",
            "description": "Contract Address on chain"
          },
          "short_id": {
            "type": "string",
            "description": "Short ID to call contract"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "BasicContract"
        }
      },
      "Contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListContract"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "abi": {
                "type": "string",
                "description": "Contract ABI"
              },
              "contract_address": {
                "type": "string",
                "description": "Contract Address"
              },
              "owner_address": {
                "type": "string",
                "description": "Contract Address"
              },
              "user_id": {
                "type": "integer",
                "description": "User ID",
                "format": "int64"
              },
              "tag": {
                "type": "string",
                "description": "Contract Tag"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "xml": {
          "name": "Contract"
        }
      },
      "ListMarketContract": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contract ID"
          },
          "name": {
            "type": "string",
            "description": "Contract Name"
          },
          "description": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "ListMarketContract"
        }
      },
      "MarketContractDetails": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contract ID"
          },
          "name": {
            "type": "string",
            "description": "Contract Name"
          },
          "description": {
            "type": "string"
          },
          "abi": {
            "type": "string",
            "description": "Contract ABI"
          },
          "bytecode": {
            "type": "string",
            "description": "Contract Bytecode"
          },
          "metadata": {
            "type": "string",
            "description": "Contract Metadata"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "market_version": {
            "type": "string",
            "description": "Marketplace Version"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "MarketContractDetails"
        }
      },
      "DeployMarketContract": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "applicationID": {
            "type": "integer",
            "description": "Contract Application ID",
            "example": 1
          },
          "networkID": {
            "type": "integer",
            "description": "Contract Network ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Contract Name",
            "example": "sample contract"
          },
          "abi": {
            "type": "string",
            "description": "Contract ABI",
            "example": "sample contract"
          },
          "bytecode": {
            "type": "string",
            "description": "Contract Bytecode",
            "example": "sample contract"
          },
          "metadata": {
            "type": "string",
            "description": "Contract Metadata",
            "example": "sample contract"
          },
          "is_public": {
            "type": "boolean",
            "description": "True if contract is to be shared publicly",
            "example": "sample contract"
          },
          "description": {
            "type": "string",
            "example": "The contract is to avoid bad things"
          }
        },
        "xml": {
          "name": "DeployMarketContract"
        }
      },
      "BasicNetwork": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sample Network"
          },
          "description": {
            "type": "string"
          },
          "consensus": {
            "type": "string",
            "example": "raft",
            "description": "Consensus Algorithm"
          },
          "bctype": {
            "type": "string",
            "example": "quorum"
          },
          "version": {
            "type": "string",
            "example": "2.6.0"
          }
        },
        "xml": {
          "name": "Network"
        }
      },
      "Network": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicNetwork"
          },
          {
            "type": "object",
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/Node"
                    }
                  ]
                }
              }
            }
          }
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "dashboardUrl": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Network"
        }
      },
      "Node": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Node Name"
          },
          "ip": {
            "type": "string",
            "example": "34.33.12.4",
            "description": "Node IP Address"
          },
          "rpcPort": {
            "type": "integer",
            "format": "int16",
            "example": "8545",
            "description": "Remote Process Call Port"
          },
          "p2pPort": {
            "type": "integer",
            "format": "int16",
            "example": "20000",
            "description": "Peer To Peer Port"
          },
          "wsPort": {
            "type": "integer",
            "format": "int16",
            "example": "8546",
            "description": "Peer To Peer Port"
          },
          "consensusPort": {
            "type": "integer",
            "format": "int16",
            "example": "raft",
            "description": "Consensus Port"
          }
        },
        "xml": {
          "name": "Node"
        }
      },
      "BasicUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "developer"]
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicUser"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "password": {
                "type": "string"
              },
              "userStatus": {
                "type": "integer",
                "format": "int32",
                "description": "User Status"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        ],
        "xml": {
          "name": "User"
        }
      },
      "Audit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "method": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "Audit"
        }
      },
      "BasicBlock": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "blockNumber": {
            "type": "integer"
          },
          "transactionCount": {
            "type": "integer"
          },
          "size": {
            "type": "integer",
            "description": "Block size as Kb"
          },
          "timeStamp": {
            "type": "integer"
          }
        }
      },
      "BasicTransaction": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "from_address": {
            "type": "string"
          },
          "to_address": {
            "type": "string"
          },
          "short_id": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "user_id": {
            "type": "integer"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicTransaction"
          },
          {
            "type": "object",
            "properties": {}
          }
        ],
        "properties": {
          "block_hash": {
            "type": "string"
          },
          "block_number": {
            "type": "integer"
          },
          "input": {
            "type": "array",
            "items": {
              "type": "string|integer|boolean"
            }
          },
          "extraData": {
            "type": "object"
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "400Resp": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "201Resp": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "200TokenResp": {
        "description": "Success Login",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username of user"
                },
                "role": {
                  "type": "string",
                  "description": "User Role"
                },
                "token": {
                  "type": "string",
                  "description": "Authorization Token"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "networkID": {
        "in": "path",
        "name": "networkID",
        "description": "Network ID",
        "schema": {
          "minimum": 1,
          "default": 1,
          "type": "integer"
        }
      },
      "tag": {
        "in": "path",
        "name": "tag",
        "description": "Contract version tag",
        "schema": {
          "type": "string"
        }
      },
      "applicationID": {
        "in": "path",
        "name": "applicationID",
        "description": "application ID",
        "schema": {
          "minimum": 1,
          "default": 1,
          "type": "integer"
        }
      },
      "shortID": {
        "in": "path",
        "name": "shortID",
        "description": "Short ID for contract",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "in": "path",
        "name": "id",
        "description": "ID for contract",
        "schema": {
          "minimum": 1,
          "default": 1,
          "type": "integer"
        }
      },
      "method": {
        "in": "path",
        "name": "method",
        "description": "Deployed Contract Method",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pageFilter": {
        "in": "query",
        "name": "page",
        "description": "Active Page Number",
        "schema": {
          "minimum": 1,
          "default": 1,
          "type": "integer"
        }
      },
      "pageSizeFilter": {
        "in": "query",
        "name": "pageSize",
        "description": "Item count on a page",
        "schema": {
          "minimum": 1,
          "default": 20,
          "type": "integer"
        }
      },
      "lastLimitFilter": {
        "in": "query",
        "name": "lastLimit",
        "description": "Last item count",
        "schema": {
          "minimum": 1,
          "type": "integer"
        }
      },
      "orderByFilter": {
        "in": "query",
        "name": "orderBy",
        "description": "A field name to order",
        "schema": {
          "type": "string",
          "description": "Field name, default : id or timestamp"
        }
      }
    }
  }
}
